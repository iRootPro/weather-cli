import chalk from 'chalk';
import { getCurrentDate } from '../helpers/getCurrentDate.js';
import {
  convertTimeStamp,
  convertTimeStampDate,
} from '../helpers/convertTimeStamp.js';
import Table from 'cli-table';
import dedent from 'dedent-js';

export const outputCurrentWeather = (weather) => {
  console.log(`
      ${chalk.green('–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:')} ${getCurrentDate()}. –ì–æ—Ä–æ–¥: ${
    weather.name
  }
      ${chalk.bgWhite.black(
        ' ' + weather.weather[0].description.toUpperCase() + ' ',
      )} 
      –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${weather.main.temp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${
    weather.main.feels_like
  }¬∞C. 
      –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${weather.main.humidity}% 
      –î–∞–≤–ª–µ–Ω–∏–µ: ${Math.floor(weather.main.pressure * 0.75)} –º–º.—Ä—Ç.—Å—Ç.
      –í–µ—Ç–µ—Ä: ${weather.wind.speed} –º/—Å
      üåÖ –í–æ—Å—Ö–æ–¥: ${convertTimeStamp(
        weather.sys.sunrise,
      )} üåá –ó–∞—Ö–æ–¥: ${convertTimeStamp(weather.sys.sunset)}
    `);
};

export const outputDailyWeather = (weather, city) => {
  const table = new Table({
    head: [
      '–î–∞—Ç–∞',
      '–†–∞—Å—Å–≤–µ—Ç',
      '–ó–∞–∫–∞—Ç',
      't¬∞ –¥–µ–Ω—å',
      't¬∞ –Ω–æ—á—å',
      '–í–µ—Ç–µ—Ä',
      '–î–∞–≤–ª–µ–Ω–∏–µ',
      '–í–ª–∞–∂–Ω–æ—Å—Ç—å',
      '–ü–æ–≥–æ–¥–∞',
    ],
    style: {
      compact: true,
    },
  });

  weather.daily.forEach((day) =>
    table.push([
      convertTimeStampDate(day.dt),
      convertTimeStamp(day.sunrise),
      convertTimeStamp(day.sunset),
      day.temp.day + ` (${day.temp.min} - ${day.temp.max})`,
      day.temp.night + ` (${day.temp.eve} - ${day.temp.morn})`,
      day.wind_speed + ' –º/—Å',
      Math.floor(day.pressure * 0.75) + ' –º–º.—Ä—Ç.—Å—Ç.',
      day.humidity + '%',
      day.weather[0].description,
    ]),
  );
  console.log(`–ü–æ–≥–æ–¥–∞. ${city}`);
  console.log(table.toString());

  const alerts = weather.alerts.filter((alert) => alert.description.length > 0);
  if (alerts.length === 0) {
    return;
  }
  console.log('–í–Ω–∏–º–∞–Ω–∏–µ!');
  alerts.forEach((alert) => {
    console.log(
      dedent(`
          ${chalk.bgWhite.black(
            ` –° ${convertTimeStampDate(alert.start)} ${convertTimeStamp(
              alert.start,
            )} –ø–æ ${convertTimeStampDate(alert.end)} ${convertTimeStamp(
              alert.end,
            )} ${chalk.bgRed.black(` ${alert.event} `)} `,
          )} 
              ${alert.description}   
          `),
    );
  });
};

export const outputHourlyWeather = (weather, city) => {
  const table = new Table({
    head: ['–î–∞—Ç–∞', 't¬∞', '–í–µ—Ç–µ—Ä', '–î–∞–≤–ª–µ–Ω–∏–µ', '–í–ª–∞–∂–Ω–æ—Å—Ç—å', '–ü–æ–≥–æ–¥–∞'],
    style: {
      compact: true,
    },
  });

  for (let i = 0; i < 12; i++) {
    let item = weather.hourly[i];
    table.push([
      convertTimeStamp(item.dt),
      item.temp + ` (${item.feels_like})`,
      item.wind_speed + ' –º/—Å',
      Math.floor(item.pressure * 0.75) + ' –º–º.—Ä—Ç.—Å—Ç.',
      item.humidity + '%',
      item.weather[0].description,
    ]);
  }
  console.log(`–ü–æ–≥–æ–¥–∞. ${city}`);
  console.log(table.toString());
};
